///
/// ScannerMode.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS enum `ScannerMode`, backed by a C++ enum.
 */
public typealias ScannerMode = margelo.nitro.bleprintandscan.ScannerMode

public extension ScannerMode {
  /**
   * Get a ScannerMode for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "KEY_HOLD":
        self = .keyHold
      case "CONTINUOUS":
        self = .continuous
      case "KEY_PULSE":
        self = .keyPulse
      case "HOST_TRIGGER":
        self = .hostTrigger
      default:
        return nil
    }
  }

  /**
   * Get the String value this ScannerMode represents.
   */
  var stringValue: String {
    switch self {
      case .keyHold:
        return "KEY_HOLD"
      case .continuous:
        return "CONTINUOUS"
      case .keyPulse:
        return "KEY_PULSE"
      case .hostTrigger:
        return "HOST_TRIGGER"
    }
  }
}
