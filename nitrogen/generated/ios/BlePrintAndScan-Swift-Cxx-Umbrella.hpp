///
/// BlePrintAndScan-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `ArrayBuffer` to properly resolve imports.
namespace NitroModules { class ArrayBuffer; }
// Forward declaration of `BeepSettings` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { struct BeepSettings; }
// Forward declaration of `BeepTone` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { enum class BeepTone; }
// Forward declaration of `BeepVolume` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { enum class BeepVolume; }
// Forward declaration of `DataFormatSettings` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { struct DataFormatSettings; }
// Forward declaration of `Device` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { struct Device; }
// Forward declaration of `HybridBlePrinterSpec` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { class HybridBlePrinterSpec; }
// Forward declaration of `HybridBleScannerSpec` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { class HybridBleScannerSpec; }
// Forward declaration of `PowerSettings` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { struct PowerSettings; }
// Forward declaration of `ScanResult` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { struct ScanResult; }
// Forward declaration of `ScannerMode` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { enum class ScannerMode; }
// Forward declaration of `ScannerTrigger` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { enum class ScannerTrigger; }
// Forward declaration of `TimestampFormat` to properly resolve imports.
namespace margelo::nitro::bleprintandscan { enum class TimestampFormat; }

// Include C++ defined types
#include "BeepSettings.hpp"
#include "BeepTone.hpp"
#include "BeepVolume.hpp"
#include "DataFormatSettings.hpp"
#include "Device.hpp"
#include "HybridBlePrinterSpec.hpp"
#include "HybridBleScannerSpec.hpp"
#include "PowerSettings.hpp"
#include "ScanResult.hpp"
#include "ScannerMode.hpp"
#include "ScannerTrigger.hpp"
#include "TimestampFormat.hpp"
#include <NitroModules/ArrayBuffer.hpp>
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <functional>
#include <memory>
#include <optional>
#include <string>
#include <vector>

// C++ helpers for Swift
#include "BlePrintAndScan-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridBlePrinterSpec_cxx` to properly resolve imports.
namespace BlePrintAndScan { class HybridBlePrinterSpec_cxx; }
// Forward declaration of `HybridBleScannerSpec_cxx` to properly resolve imports.
namespace BlePrintAndScan { class HybridBleScannerSpec_cxx; }

// Include Swift defined types
#if __has_include("BlePrintAndScan-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "BlePrintAndScan".
#include "BlePrintAndScan-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<BlePrintAndScan/BlePrintAndScan-Swift.h>)
#include <BlePrintAndScan/BlePrintAndScan-Swift.h>
#else
#error BlePrintAndScan's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "BlePrintAndScan", and try building the app first.
#endif
