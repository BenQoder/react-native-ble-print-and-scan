///
/// JScannerCurrentSettings.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "ScannerCurrentSettings.hpp"

#include "BeepSettings.hpp"
#include "BeepTone.hpp"
#include "BeepVolume.hpp"
#include "DataFormatSettings.hpp"
#include "JBeepSettings.hpp"
#include "JBeepTone.hpp"
#include "JBeepVolume.hpp"
#include "JDataFormatSettings.hpp"
#include "JPowerSettings.hpp"
#include "JScannerMode.hpp"
#include "PowerSettings.hpp"
#include "ScannerMode.hpp"
#include <optional>

namespace margelo::nitro::bleprintandscan {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "ScannerCurrentSettings" and the the Kotlin data class "ScannerCurrentSettings".
   */
  struct JScannerCurrentSettings final: public jni::JavaClass<JScannerCurrentSettings> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/bleprintandscan/ScannerCurrentSettings;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct ScannerCurrentSettings by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    ScannerCurrentSettings toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldWorkMode = clazz->getField<JScannerMode>("workMode");
      jni::local_ref<JScannerMode> workMode = this->getFieldValue(fieldWorkMode);
      static const auto fieldBeepSettings = clazz->getField<JBeepSettings>("beepSettings");
      jni::local_ref<JBeepSettings> beepSettings = this->getFieldValue(fieldBeepSettings);
      static const auto fieldPowerSettings = clazz->getField<JPowerSettings>("powerSettings");
      jni::local_ref<JPowerSettings> powerSettings = this->getFieldValue(fieldPowerSettings);
      static const auto fieldDataFormatSettings = clazz->getField<JDataFormatSettings>("dataFormatSettings");
      jni::local_ref<JDataFormatSettings> dataFormatSettings = this->getFieldValue(fieldDataFormatSettings);
      static const auto fieldTimestampEnabled = clazz->getField<jboolean>("timestampEnabled");
      jboolean timestampEnabled = this->getFieldValue(fieldTimestampEnabled);
      return ScannerCurrentSettings(
        workMode->toCpp(),
        beepSettings->toCpp(),
        powerSettings->toCpp(),
        dataFormatSettings->toCpp(),
        static_cast<bool>(timestampEnabled)
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JScannerCurrentSettings::javaobject> fromCpp(const ScannerCurrentSettings& value) {
      return newInstance(
        JScannerMode::fromCpp(value.workMode),
        JBeepSettings::fromCpp(value.beepSettings),
        JPowerSettings::fromCpp(value.powerSettings),
        JDataFormatSettings::fromCpp(value.dataFormatSettings),
        value.timestampEnabled
      );
    }
  };

} // namespace margelo::nitro::bleprintandscan
