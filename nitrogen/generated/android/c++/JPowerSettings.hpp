///
/// JPowerSettings.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PowerSettings.hpp"



namespace margelo::nitro::bleprintandscan {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PowerSettings" and the the Kotlin data class "PowerSettings".
   */
  struct JPowerSettings final: public jni::JavaClass<JPowerSettings> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/bleprintandscan/PowerSettings;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PowerSettings by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PowerSettings toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldSleepTimeMinutes = clazz->getField<double>("sleepTimeMinutes");
      double sleepTimeMinutes = this->getFieldValue(fieldSleepTimeMinutes);
      static const auto fieldAutoSleepEnabled = clazz->getField<jboolean>("autoSleepEnabled");
      jboolean autoSleepEnabled = this->getFieldValue(fieldAutoSleepEnabled);
      return PowerSettings(
        sleepTimeMinutes,
        static_cast<bool>(autoSleepEnabled)
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPowerSettings::javaobject> fromCpp(const PowerSettings& value) {
      return newInstance(
        value.sleepTimeMinutes,
        value.autoSleepEnabled
      );
    }
  };

} // namespace margelo::nitro::bleprintandscan
