///
/// HybridBleScannerSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridBleScannerSpec.hpp"

namespace margelo::nitro::bleprintandscan {

  void HybridBleScannerSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("initializeScanner", &HybridBleScannerSpec::initializeScanner);
      prototype.registerHybridMethod("startScanningForScanners", &HybridBleScannerSpec::startScanningForScanners);
      prototype.registerHybridMethod("suspendScanForScanners", &HybridBleScannerSpec::suspendScanForScanners);
      prototype.registerHybridMethod("connectToScanner", &HybridBleScannerSpec::connectToScanner);
      prototype.registerHybridMethod("disconnectFromScanner", &HybridBleScannerSpec::disconnectFromScanner);
      prototype.registerHybridMethod("isScannerConnected", &HybridBleScannerSpec::isScannerConnected);
      prototype.registerHybridMethod("getConnectedScanners", &HybridBleScannerSpec::getConnectedScanners);
      prototype.registerHybridMethod("disconnectAllScanners", &HybridBleScannerSpec::disconnectAllScanners);
      prototype.registerHybridMethod("startListening", &HybridBleScannerSpec::startListening);
      prototype.registerHybridMethod("stopListening", &HybridBleScannerSpec::stopListening);
      prototype.registerHybridMethod("triggerScan", &HybridBleScannerSpec::triggerScan);
      prototype.registerHybridMethod("setScannerMode", &HybridBleScannerSpec::setScannerMode);
      prototype.registerHybridMethod("setBeepSettings", &HybridBleScannerSpec::setBeepSettings);
      prototype.registerHybridMethod("setPowerSettings", &HybridBleScannerSpec::setPowerSettings);
      prototype.registerHybridMethod("setDataFormatSettings", &HybridBleScannerSpec::setDataFormatSettings);
      prototype.registerHybridMethod("setTimestamp", &HybridBleScannerSpec::setTimestamp);
      prototype.registerHybridMethod("restoreFactorySettings", &HybridBleScannerSpec::restoreFactorySettings);
      prototype.registerHybridMethod("customBeep", &HybridBleScannerSpec::customBeep);
      prototype.registerHybridMethod("customBeepTime", &HybridBleScannerSpec::customBeepTime);
      prototype.registerHybridMethod("powerOff", &HybridBleScannerSpec::powerOff);
      prototype.registerHybridMethod("getStoredDataCount", &HybridBleScannerSpec::getStoredDataCount);
      prototype.registerHybridMethod("uploadStoredData", &HybridBleScannerSpec::uploadStoredData);
      prototype.registerHybridMethod("clearStoredData", &HybridBleScannerSpec::clearStoredData);
      prototype.registerHybridMethod("sendRawCommand", &HybridBleScannerSpec::sendRawCommand);
    });
  }

} // namespace margelo::nitro::bleprintandscan
